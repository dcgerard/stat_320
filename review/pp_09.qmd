---
title: "Chapter 9 Practice Problems"
author: "David Gerard"
date: today
---

These practice problems mostly come from Rosner's publicly available study sheet at the books [companion website](https://www.cengage.com/cgi-wadsworth/course_products_wp.pl?fid=M20b&product_isbn_issn=9781305268920). The solutions are my own, since we differ slightly on what we are looking for in the solutions.

```{r}
#| echo: false
#| eval: true
#| message: false
library(tidyverse)
library(gt)
library(broom)
plt_t <- function(
    mu = 0, 
    sig = 1, 
    lb = -Inf,
    ub = Inf,
    df = Inf, 
    rng = c(-3, 3), 
    two_sided = FALSE,
    col = "#E69F00",
    lwd = 1) {
  tibble(x = seq(mu + rng[[1]] * sig, mu + rng[[2]] * sig, length.out = 500)) |>
    mutate(y = dt(x = (x - mu) / sig, df = df)) ->
    df1
  df1 |>
    filter(x > lb, x < ub) ->
    df2
  ggplot() +
    geom_line(data = df1, mapping = aes(x = x, y = y), linewidth = lwd) +
    geom_area(data = df2, mapping = aes(x = x, y = y), fill = col) +
    geom_line(data = df2, mapping = aes(x = x, y = y), color = col, linewidth = lwd) +
    theme_classic() +
    theme(axis.title = element_blank()) ->
    pl
  
  if (two_sided) {
    df1 |>
      filter(x > -ub, x < -lb) ->
      df3
    pl <- pl + 
      geom_area(data = df3, mapping = aes(x = x, y = y), fill = col) +
      geom_line(data = df3, mapping = aes(x = x, y = y), color = col, linewidth = lwd)
  }
  pl
}
plt_binom <- function(
    size, 
    prob = 0.5, 
    lb = -Inf,
    ub = Inf, 
    rng = c(0, size),
    col = "#E69F00",
    valmax = NULL,
    lwd = 1) {
  
  tibble(x = seq(rng[[1]], rng[[2]], by = 1)) |>
    mutate(
      pmf = stats::dbinom(x = x, size = size, prob = prob)
      ) ->
    df
  
  if (is.null(valmax)) {
    df |>
      mutate(col = (x >= lb & x <= ub)) ->
      df
  } else {
    df |>
      mutate(col = pmf <= stats::dbinom(x = valmax, size = size, prob = prob)) ->
      df
  }
  df |>
    ggplot(aes(x = x, xend = x, yend = pmf, color = col)) +
    geom_segment(y = 0, lwd = lwd) +
    theme_classic() +
    theme(axis.title = element_blank()) +
    scale_color_manual(values = c("black", col), guide = "none") +
    scale_x_continuous(breaks = seq(rng[[1]], rng[[2]]))
}
```

## Ophthalmology

Suppose an ophthalmologist reviews fundus photographs of 30 patients with macular degeneration both before and 3 months after receiving a laser treatment. To assess the efficacy of treatment, each patient is rated as improved, remained the same, or declined.

::: {.panel-tabset}
## 9.1 
If 20 patients improved, 7 declined, and 3 remained the same, then assess whether or not patients undergoing this treatment are showing significant change from baseline to 3 months afterward. Report a p-value. 

## Solutions
This is a sign test. Let $X$ be the number of patients that improved, and let $n$ be the number of patients that showed a change. Then $X \sim \mathrm{Binom}(n, p)$. We want to test $H_0: p = 1/2$ versus $H_A: p \neq 1/2$. We are told that $x = 20$ and $n = 27$. We can use the normal approximation to the binomial since $np_0(1-p_0) \geq 5$
```{r}
27 * 0.5 * (1 - 0.5)
```
We calculate the $z$ statistic
$$
z = \frac{|\hat{p} - p_0| - 1/(2n)}{\sqrt{p_0(1-p_0)/n}} = \frac{|20/27 - 0.5| - 1/54}{\sqrt{0.5(1-0.5)/27}}
$$
```{r}
(abs(20/27 - 0.5) - 1/54) / sqrt(0.5 * (1 - 0.5) / 27)
```
We compare this to standard normal distribution
```{r}
#| echo: false
plt_t(lb = 2.309, two_sided = TRUE) +
  geom_vline(xintercept = 2.309, lty = 2)
```
```{r}
2 * pnorm(-2.309)
```
So we have evidence that there is a different from baseline.

The real way in R is
```{r}
prop.test(x = 20, n = 27, p = 0.5) |>
  tidy() |>
  select(p.value)
```

The exact binomial approach, which is always valid, calculates the sum of the probabilities that are at least as probabable as $x = 20$ given $X \sim \mathrm{Binom}(27, 0.5)$
```{r}
#| echo: false
plt_binom(size = 27, prob = 0.5, valmax = 20) +
  geom_hline(yintercept = dbinom(x = 20, size = 27, prob = 0.5), lty = 2)
```
```{r}
binom.test(x = 20, n = 27, p = 0.5) |>
  tidy() |>
  select(p.value)
```
:::

Suppose that the patients are divided into two groups according to initial visual acuity (VA). Of the 14 patients with VA 20-40 or better, 8 improved, 5 declined, and 1 stayed the same. Of the 16 patients with VA worse than 20–40, 12 improved, 2 declined, and 2 stayed the same.

::: {.panel-tabset}
## 9.2 
Assess the results in the subgroup of patients with VA of 20–40 or better.

## Solutions
This is also a sign test with observed $x = 8$ and $n = 13$. We need to use an exact test since $np_0(1-p_0) < 5$
```{r}
13 * 0.5 * (1 - 0.5)
```
```{r}
#| echo: false
plt_binom(size = 13, prob = 0.5, valmax = 8) +
  geom_hline(yintercept = dbinom(x = 8, size = 13, prob = 0.5), lty = 2)
```
```{r}
binom.test(x = 8, n = 13, p = 0.5) |>
  tidy() |>
  select(p.value)
```
So we do not have evidence of a difference.
:::

::: {.panel-tabset}
## 9.3 
Assess the results in the subgroup of patients with VA worse than 20–40.

## Solutions
This is also a sign test with observed $x = 12$ and $n = 14$. We need to use an exact test since $np_0(1-p_0) < 5$
```{r}
14 * 0.5 * (1 - 0.5)
```
```{r}
#| echo: false
plt_binom(size = 14, prob = 0.5, valmax = 12) +
  geom_hline(yintercept = dbinom(x = 12, size = 14, prob = 0.5), lty = 2)
```
```{r}
binom.test(x = 12, n = 14, p = 0.5) |>
  tidy() |>
  select(p.value)
```
So we do have evidence of a difference.
:::

## Diabetes

An experiment was conducted to study responses to different methods of taking insulin in patients with type I diabetes. The percentages of glycosolated hemoglobin initially and 3 months after taking insulin by nasal spray are given in the following data frame.

```{r}
hemo <- tibble(
  id = 1:8,
  before = c(11.0, 7.7, 5.9, 9.5, 8.7, 8.6, 11.0, 6.9),
  after3 = c(10.2, 7.9, 6.5, 10.4, 8.8, 9.0, 9.5, 7.6)
)
hemo
```

::: {.panel-tabset}
## 9.4
Perform a t test to compare the percentages of glycosolated hemoglobin before and 3 months after treatment.

## Solutions
We will do a paired $t$-test. Let $D_i$ be the difference in percentages of glycosolated hemoglobin (`before - after3`) for individual $i$. We assume $D_i \sim N(\mu, \sigma^2)$. We want to test $H_0: \mu = 0$ versus $H_A: \mu \neq 0$. We calculate summary statistics
```{r}
hemo |>
  mutate(diff = before - after3) |>
  summarize(
    mean = mean(diff),
    sd = sd(diff),
    n = n())
```
We calculate a $t$-statistic
$$
t = \frac{\bar{x} - \mu_0}{s/\sqrt{n}} = \frac{-0.075 - 0}{0.8207 / \sqrt{8}}
$$
Numerically
```{r}
(-0.075 - 0) / (0.8207 / sqrt(8))
```
We compare this to a $t_{7}$ distribution
```{r}
plt_t(ub = -0.2585, two_sided = TRUE, df = 7) +
  geom_vline(xintercept = -0.2585, lty = 2)
```
```{r}
2 * pt(-0.2585, df = 9)
```
Since the $p$-value is so large, we do not have evidence that the mean difference in percentage of glycosolated hemoglobin is different from 0.

The real-way in R uses `t.test()`
```{r}
hemo <- mutate(hemo, diff = before - after3)
t.test(diff ~ 1, data = hemo, mu = 0) |>
  tidy() |>
  select(p.value)
```

:::

::: {.panel-tabset}
## 9.5a
Suppose normality is not assumed. What nonparameteric test would you use?

## Solutions
The Wicoxin Signed-rank test.
:::

::: {.panel-tabset}
## 9.5b
Calculate the test-statistic for the tetst in 9.5a.

## Solutions
We first rank by the absolute values
```{r}
#| echo: false
hemo |>
  select(Difference = diff) |>
  mutate(`|Difference|` = abs(Difference)) |>
  arrange(`|Difference|`) |>
  mutate(Rank = rank(`|Difference|`)) |>
  gt()
```
We then sum the ranks of either all of the negative numbers, or all of the positive numbers (doesn't matter which one).

If you sum the ranks of the positives, you get 
```{r}
6 + 8
```
If you sum the ranks of the negatives, you get
```{r}
1 + 2 + 3 + 4 + 5 + 7
```
:::

::: {.panel-tabset}
## 9.5c
Use R to run the test from 9.5 aa and report the p-value.

## Solutions
```{r}
wilcox.test(diff ~ 1, data = hemo) |>
  tidy() |>
  select(statistic, p.value)
```
We would again fail to reject $H_0$.
:::



::: {.panel-tabset}
## 9.6 
Compare your results in Problems 9.4 and 9.5.

## Solutions
Both indicate no evidence of a difference.
:::

## Pathology

The data in the following data frame are measurements from a group of 10 normal males and 11 males with left-heart disease taken at autopsy at a particular hospital. Measurements were made on several variables at that time, and the table presents the measurements on total heart weight (THW) and total body weight (BW). Assume that the diagnosis of left-heart disease is made independently of these variables.

```{r}
heart <- tibble(
  status = c(rep("disease", 11), rep("normal", 10)),
  thw = c(450, 760, 325, 495, 285, 450, 460, 375, 310, 615, 425,
          245, 350, 340, 300, 310, 270, 300, 360, 405, 290),
  bw = c(54.6, 73.5, 50.3, 44.6, 58.1, 61.3, 75.3, 41.1, 51.5, 41.7, 59.7,
         40.8, 67.4, 53.3, 62.2, 65.5, 47.5, 51.2, 74.9, 59.0, 40.5)
)
```


::: {.panel-tabset}
## 9.7 
Suppose normality is not assumed. What nonparametric test can be used to compare total heart weight of males with left-heart disease with that of normal males?

## Solutions
A Wilcoxin rank-sum test. This is a two-sample problem.
:::

::: {.panel-tabset}
## 9.8a
Calculate a test-statistic for the test in 9.7.

## Solutions
We first rank all of the `thw` values
```{r}
#| echo: false
heart |>
  select(status, thw) |>
  arrange(thw) |>
  mutate(rank = rank(thw)) |>
  gt()
```
Notice that there are two ties. We handle this by giving them the average rank (e.g., the average of ranks 16 and 17, resulting in both having rank 16.5).

We now sum either all of the ranks of the disease group, or all of the ranks of the normal group (doesn't matter which).

For the normal group, we get
```{r}
1 + 2 + 4 + 5.5 + 5.5 + 7.5 + 10 + 11 + 12 + 14
```

For the disease group, we get
```{r}
3 + 7.5 + 9 + 13 + 15 + 16.5 + 16.5 + 18 + 19 + 20 + 21
```
:::

::: {.panel-tabset}
## 9.8a
Run the test from 9.7 in R and report a p-value.

## Solutions
```{r}
wilcox.test(thw ~ status, data = heart, exact = FALSE) |>
  tidy() |>
  select(statistic, p.value)
```

Note (but not important for you) that R's statistic subtract $m(m+1)/2$ from the statistic, where $m$ is the sample size of the group. So
```{r}
158.5 - 11 * (11 + 1) / 2
```
:::

## Cardiology

Propranolol is a standard drug given to ease the pain of patients with episodes of unstable angina. A new drug for the treatment of this disease is tested on 30 pairs of patients who are matched on a one-to-one basis according to age, sex, and clinical condition and are assessed as to the severity of their pain. Suppose that in 15 pairs of patients, the patient with the new drug has less pain; in 10 pairs of patients, the patient with propranolol has less pain; and in 5 pairs of patients, the pain is about the same with the two drugs.

::: {.panel-tabset}
## 9.9 
What is the appropriate test to use here?

## Solutions
Use the sign test. Let $X$ be the number of patients with less pain. Let $n$ be the number of patients reporting a difference. Then $X \sim \mathrm{Binom}(n, p)$. We want to test $H_0: p = 1/2$ versus $H_A: p \neq 1/2$.
:::

::: {.panel-tabset}
## 9.10 
Perform the test in Problem 9.9 and report a p-value.

## Solutions
We are told that we observe $x = 10$ and $n = 25$. We can use the normal approximation to the binomial since $np_0(1-p_0) \geq 5$
```{r}
25 * 0.5 * (1 - 0.5)
```
We calculate the $z$ statistic
$$
z = \frac{|\hat{p} - p_0| - 1/(2n)}{\sqrt{p_0(1-p_0)/n}} = \frac{|10/25 - 0.5| - 1/50}{\sqrt{0.5(1-0.5)/25}}
$$
```{r}
(abs(10/25 - 0.5) - 1/50) / sqrt(0.5 * (1 - 0.5) / 25)
```
We compare this to standard normal distribution
```{r}
#| echo: false
plt_t(lb = 0.8, two_sided = TRUE) +
  geom_vline(xintercept = 0.8, lty = 2)
```
```{r}
2 * pnorm(-0.8)
```
So we do not have evidence of a difference in pain level.
The real way in R is
```{r}
prop.test(x = 10, n = 25, p = 0.5) |>
  tidy() |>
  select(p.value)
```

The exact binomial approach, which is always valid, calculates the sum of the probabilities that are at least as probabable as $x = 10$ given $X \sim \mathrm{Binom}(25, 0.5)$
```{r}
#| echo: false
plt_binom(size = 25, prob = 0.5, valmax = 10) +
  geom_hline(yintercept = dbinom(x = 10, size = 25, prob = 0.5), lty = 2)
```
```{r}
binom.test(x = 10, n = 25, p = 0.5) |>
  tidy() |>
  select(p.value)
```
:::

## Ophthalmology

A camera has been developed to detect the presence of cataract more accurately. Using this camera, the gray level of each point (or pixel) in the lens of a human eye can be characterized into 256 gradations, where a gray level of 1 represents black and a gray level of 256 represents white. To test the camera, photographs were taken of 6 randomly selected normal eyes and 6 randomly selected cataractous eyes (the two groups consist of different people). The median gray level of each eye was computed over the 10,000+ pixels in the lens. The data are given in the data frame below.

```{r}
cateract <- tibble(
  status = c(rep("cateractous", 6), rep("normal", 6)),
  gray_level = c(161, 140, 136, 171, 106, 149, 158, 182, 185, 145, 167, 177)
)
```


::: {.panel-tabset}
## 9.11 
What nonparametric test could be used to compare the median gray levels of normal and cataractous eyes?

## Solutions
A Wilcoxin rank-sum test.
:::

::: {.panel-tabset}
## 9.12a
Calculate the test-statistic from the test in 9.11.

## Solutions
We first rank all of the `gray_level` values
```{r}
#| echo: false
cateract |>
  select(status, gray_level) |>
  arrange(gray_level) |>
  mutate(rank = rank(gray_level)) |>
  gt()
```

We then sum either all of the normal ranks or all of the cateractous ranks (doesn't matter which one).

For the normal ranks:
```{r}
4 + 6 + 8 + 10 + 11 + 12
```

For the cateractous ranks
```{r}
1 + 2 + 3 + 5 + 7 + 9
```
:::

::: {.panel-tabset}
## 9.12b
Use R to carry out the test from 9.11.

## Solutions
```{r}
wilcox.test(gray_level ~ status, data = cateract) |>
  tidy() |>
  select(p.value)
```
So we have some weak evidence of a difference in gray pixels between the two groups.
:::

## Psychiatry

Suppose we are conducting a study of the effectiveness of lithium therapy for manic-depressive patients. The study is carried out at two different centers, and we want to determine if the patient populations are comparable at baseline. A self-rating questionnaire about their general psychological well-being is administered to the prospective patients at the two different centers. The outcome measure on the questionnaire is a four-category scale: (1) = feel good; (2) = usually feel good, once in a while feel nervous; (3) = feel nervous half the time; (4) = usually feel nervous. Suppose the data at the two different centers are as follows:

```{r}
quest <- tibble(
  feeling = c(3, 4, 1, 1, 3, 2, 3, 4, 4, 3, 2, 4, 4, 4,
              1, 2, 1, 3, 2, 4, 1, 2, 1, 3, 1, 2, 2, 2, 1, 3),
  center = c(rep("1", 14), rep("2", 16))
)
```

::: {.panel-tabset}
## 9.13 
What type of data does this type of scale represent?

## Solutions
Ordinal.
:::

::: {.panel-tabset}
## 9.14 
Why might a parametric test not be useful with this type of data?

## Solutions
The parametric test you know is the $t$-test, and this assumes cardinal values. E.g., it assumes the mean and standard deviations are meaningful, but they are not appropriate here since we have ordinal values.
:::

::: {.panel-tabset}
## 9.15 
Assess if there is any significant difference in the responses of the two patient populations using a non-parametric test. Just do this in R. No need to calculate the test statistic.

## Solutions
We should use a Wilcox rank-sum test.
```{r}
wilcox.test(feeling ~ center, data = quest, exact = FALSE) |>
  tidy() |>
  select(p.value)
```
We have some evidence that there is a difference in centers.
:::

## Psychiatry

Much attention has been given in recent years to the role of transcendental meditation in improving health, particularly in lowering blood pressure. One hypothesis that emerges from this work is that transcendental meditation might also be useful in treating psychiatric patients with symptoms of anxiety. Suppose that a protocol of meditational therapy is administered once a day to 20 patients with anxiety. The patients are given a psychiatric exam at baseline and at a follow-up exam 2 months later. The degree of improvement is rated on a 10-point scale, with 1 indicating the most improvement and 10 the least improvement. Similarly, 26 comparably affected patients with anxiety are given standard psychotherapy and are asked to come back 2 months later for a follow-up exam. The results are given in Table 9.2.

```{r}
#| echo: false

# Create the tibble
tbl <- tibble(
  `Meditation_d` = 1:10,
  `Meditation_f` = c(3, 4, 7, 3, 2, 1, 0, 0, 0, 0),
  `Psychotherapy_d` = 1:10,
  `Psychotherapy_f` = c(0, 2, 5, 3, 8, 4, 2, 1, 1, 0)
)

# Create the gt table
tbl |>
  gt() |>
  tab_header(
    title = md("**Table 9.2**"),
    subtitle = md("Degree of improvement in patients with anxiety who are treated with transcendental meditation or psychotherapy")
  ) |>
  cols_label(
    Meditation_d = "Degree of Improvement",
    Meditation_f = "Frequency",
    Psychotherapy_d = "Decree of Improvement",
    Psychotherapy_f = "Frequency"
  ) |>
  tab_spanner(
    label = "Meditation",
    columns = c(Meditation_d, Meditation_f)
  ) |>
  tab_spanner(
    label = "Psychotherapy",
    columns = c(Psychotherapy_d, Psychotherapy_f)
  ) |>
  cols_align(
    align = "center",
    columns = everything()
  )
```


::: {.panel-tabset}
## 9.16 
Why might a parametric test not be useful here?

## Solutions
The parametric test you know is the $t$-test, and this assumes cardinal values. E.g., it assumes the mean and standard deviations are meaningful, but they are not appropriate here since we have ordinal values.
:::

::: {.panel-tabset}
## 9.17 
What nonparametric test should be used to analyze these data?

## Solutions
A Wilcox rank-sum test.
:::
