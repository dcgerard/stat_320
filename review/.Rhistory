library(tidyverse)
tibble(
Patient = rep(1:10, each = 2))
tibble(
Patient = rep(1:10, each = 2),
Arm = rep(c("Left", "Right"), times = 10),
Observer = rep(c("Jones", "Smith", "Smith", "Jones"), times = 5))
armbp <- tibble(
Patient = 1:10,
Left_arm = c(130, 120, 135, 100, 98, 110, 123, 136, 140, 155),
Right_arm = c(126, 124, 127, 95, 102, 109, 124, 132, 137, 156)
)
armbp
armbp |>
mutate(diff = Left_arm - Right_arm) |>
summarize(
mean = mean(diff),
sd = sd(diff),
n = n())
(1.5 - 0) / (3.979 / sqrt(10))
plt_t(lb = 1.192, two_sided = TRUE, df = 9) +
geom_vline(xintercept = 1.192, lty = 2)
#| echo: false
#| eval: true
#| message: false
library(tidyverse)
library(gt)
library(broom)
plt_t <- function(
mu = 0,
sig = 1,
lb = -Inf,
ub = Inf,
df = Inf,
rng = c(-3, 3),
two_sided = FALSE,
col = "#E69F00",
lwd = 1) {
tibble(x = seq(mu + rng[[1]] * sig, mu + rng[[2]] * sig, length.out = 500)) |>
mutate(y = dt(x = (x - mu) / sig, df = df)) ->
df1
df1 |>
filter(x > lb, x < ub) ->
df2
ggplot() +
geom_line(data = df1, mapping = aes(x = x, y = y), linewidth = lwd) +
geom_area(data = df2, mapping = aes(x = x, y = y), fill = col) +
geom_line(data = df2, mapping = aes(x = x, y = y), color = col, linewidth = lwd) +
theme_classic() +
theme(axis.title = element_blank()) ->
pl
if (two_sided) {
df1 |>
filter(x > -ub, x < -lb) ->
df3
pl <- pl +
geom_area(data = df3, mapping = aes(x = x, y = y), fill = col) +
geom_line(data = df3, mapping = aes(x = x, y = y), color = col, linewidth = lwd)
}
pl
}
plt_binom <- function(
size,
prob = 0.5,
lb = -Inf,
ub = Inf,
rng = c(0, size),
col = "#E69F00",
valmax = NULL,
lwd = 1) {
tibble(x = seq(rng[[1]], rng[[2]], by = 1)) |>
mutate(
pmf = stats::dbinom(x = x, size = size, prob = prob)
) ->
df
if (is.null(valmax)) {
df |>
mutate(col = (x >= lb & x <= ub)) ->
df
} else {
df |>
mutate(col = pmf <= stats::dbinom(x = valmax, size = size, prob = prob)) ->
df
}
df |>
ggplot(aes(x = x, xend = x, yend = pmf, color = col)) +
geom_segment(y = 0, lwd = lwd) +
theme_classic() +
theme(axis.title = element_blank()) +
scale_color_manual(values = c("black", col), guide = "none") +
scale_x_continuous(breaks = seq(rng[[1]], rng[[2]]))
}
plt_pois <- function(
mu,
lb = -Inf,
ub = Inf,
rng = c(0, 2 * mu),
col = "#E69F00",
valmax = NULL,
lwd = 1) {
tibble(x = seq(rng[[1]], rng[[2]], by = 1)) |>
mutate(
pmf = stats::dpois(x = x, lambda = mu)
) ->
df
if (is.null(valmax)) {
df |>
mutate(col = (x >= lb & x <= ub)) ->
df
} else {
df |>
mutate(col = pmf <= stats::dpois(x = valmax, lambda = mu)) ->
df
}
df |>
ggplot(aes(x = x, xend = x, yend = pmf, color = col)) +
geom_segment(y = 0, lwd = lwd) +
theme_classic() +
theme(axis.title = element_blank()) +
scale_color_manual(values = c("black", col), guide = "none") +
scale_x_continuous(breaks = seq(rng[[1]], rng[[2]]))
}
0.02 / 0.04
#| echo: false
plt_t(lb = 0.5, df = 93, two_sided = TRUE) +
geom_vline(xintercept = 0.5, lty = 2)
2 * pt(q = -0.5, df = 93)
#| echo: false
plt_t(lb = 1.6, df = 93, two_sided = TRUE) +
geom_vline(xintercept = 1.6, lty = 2)
2 * pt(q = -1.6, df = 93)
#| echo: false
plt_t(lb = 2, df = 93, two_sided = TRUE) +
geom_vline(xintercept = 2, lty = 2)
2 * pt(q = -2, df = 93)
heart <- tibble(
disease_status = c(rep("disease", 11), rep("normal", 10)),
observation_number = c(1:11, 1:10),
thw = c(450, 760, 325, 495, 285, 450, 460, 375, 310, 615, 425,
245, 350, 340, 300, 310, 270, 300, 360, 405, 290),
bw = c(54.6, 73.5, 50.3, 44.6, 58.1, 61.3, 75.3, 41.1, 51.5, 41.7, 59.7,
40.8, 67.4, 53.3, 62.2, 65.5, 47.5, 51.2, 74.9, 59.0, 40.5)
)
glimpse(heart)
heart |>
group_by(disease_status) |>
summarize(
xbar = mean(thw),
s_squared = var(thw),
n = n()
)
(450 - 317) / sqrt(19415 / 11 + 2218 / 10)
#| echo: false
plt_t(lb = 2.984, rng = c(-4, 4), two_sided = TRUE, df = 12.45) +
geom_vline(xintercept = 2.984, lty = 2)
2 * pt(-2.984, df = 12.45)
t.test(thw ~ disease_status, data = heart) |>
tidy() |>
select(p.value, estimate, conf.low, conf.high)
heart |>
group_by(disease_status) |>
summarize(
xbar = mean(bw),
s_squared = var(bw),
n = n()
)
((11 - 1) * 133.4 + (10 - 1) * 133.1) / (11 + 10 - 2)
(55.61 - 56.23) / (sqrt(133.3) * sqrt(1 / 11 + 1 / 10))
#| echo: false
plt_t(ub = -0.1129, rng = c(-4, 4), two_sided = TRUE, df = 19) +
geom_vline(xintercept = -0.1129, lty = 2)
2 * pt(-0.1229, df = 19)
t.test(bw ~ disease_status, data = heart, var.equal = TRUE) |>
tidy() |>
select(p.value, estimate, conf.low, conf.high)
#| echo: false
#| eval: true
#| message: false
# Create the data frame
data <- data.frame(
Group = c("Experimental", "Control"),
Pretest_Mean = c(37.51, 36.42),
Pretest_sd = c(10.66, 8.59),
Pretest_n = c(38, 23),
Posttest_Mean = c(33.42, 39.71),
Posttest_sd = c(10.18, 9.16),
Posttest_n = c(38, 23)
)
# Generate the gt table
gt_table <- gt(data) |>
tab_header(
subtitle = md("**Pretest and Posttest State-Trait Anxiety means and standard deviations for the experimental and control groups of hemodialysis patients**"),
title = "Table 8.1"
) |>
cols_label(
Group = "Group",
Pretest_Mean = "Mean",
Pretest_sd = "sd",
Pretest_n = "n",
Posttest_Mean = "Mean",
Posttest_sd = "sd",
Posttest_n = "n"
) |>
tab_spanner(
label = "Pretest",
columns = c("Pretest_Mean", "Pretest_sd", "Pretest_n")
) |>
tab_spanner(
label = "Post-test",
columns = c("Posttest_Mean", "Posttest_sd", "Posttest_n")
)
# Display the table
gt_table
((38 - 1) * 10.66^2 + (23 - 1) * 8.59^2) / (38 + 23 - 2)
(37.51 - 36.42) / (sqrt(98.78) * sqrt(1 / 38 + 1 / 23))
#| echo: false
plt_t(lb = 0.4151, two_sided = TRUE, df = 59) +
geom_vline(xintercept = 0.4151, lty = 2)
2 * pt(-0.4151, df = 59)
((38 - 1) * 10.18^2 + (23 - 1) * 9.16^2) / (38 + 23 - 2)
(33.42 - 39.71) / (sqrt(96.28) * sqrt(1 / 38 + 1 / 23))
#| echo: false
plt_t(ub = -2.426, two_sided = TRUE, df = 59) +
geom_vline(xintercept = -2.426, lty = 2)
2 * pt(-2.426, df = 59)
armbp <- tibble(
Patient = 1:10,
Left_arm = c(130, 120, 135, 100, 98, 110, 123, 136, 140, 155),
Right_arm = c(126, 124, 127, 95, 102, 109, 124, 132, 137, 156)
)
armbp
armbp |>
mutate(diff = Left_arm - Right_arm) |>
summarize(
mean = mean(diff),
sd = sd(diff),
n = n())
(1.5 - 0) / (3.979 / sqrt(10))
plt_t(lb = 1.192, two_sided = TRUE, df = 9) +
geom_vline(xintercept = 1.192, lty = 2)
2 * pt(-1.192, df = 9)
armbp <- mutate(armbp, diff = Left_arm - Right_arm)
t.test(diff ~ 1, data = armbp, mu = 0) |>
tidy() |>
select(p.value)
refract <- tibble(
id = 1:17,
od = c(1.75, -4, -1.25, 1, -1, -0.75, -2.25, 0.25, 0,
-1, 0.5, -8.5, 0.5, -5.25, -2.25, -6.5, 1.75),
os = c(2, -4, -1, 1, -1, 0.25, -2.25, 0.25, 0.5, -1.25,
-1.75, -5, 0.5, -4.75, -2.5, -6.25, 1.75)
) |>
mutate(diff = od - os)
refract
refract |>
summarize(
mean = mean(diff),
sd = sd(diff),
n = n())
(-0.2059 - 0) / (1.073 / sqrt(17))
qt(1 - 0.05 / 2, df = 16)
plt_t(ub = -0.2059, two_sided = TRUE, df = 16) +
geom_vline(xintercept = -0.2059, lty = 2)
2 * pt(-0.2059, df = 9)
t.test(diff ~ 1, data = refract, mu = 0) |>
tidy() |>
select(p.value)
plt_t(ub = -0.7912, two_sided = TRUE, df = 16) +
geom_vline(xintercept = -0.7912, lty = 2)
2 * pt(-0.7912, df = 9)
qt(p = 1 - 0.05 / 2, df = 16)
-0.2059 - 2.12 * 1.073 / sqrt(17)
-0.2059 + 2.12 * 1.073 / sqrt(17)
t.test(diff ~ 1, data = refract, mu = 0) |>
tidy() |>
select(conf.low, conf.high)
qt(p = 1 - 0.1 / 2, df = 16)
-0.2059 - 1.746 * 1.073 / sqrt(17)
-0.2059 + 1.746 * 1.073 / sqrt(17)
t.test(diff ~ 1, data = refract, level = 0.9) |>
tidy() |>
select(conf.low, conf.high)
t.test(diff ~ 1, data = refract, conf.level = 0.9) |>
tidy() |>
select(conf.low, conf.high)
((66 - 1) * 37^2 + (97 - 1) * 37^2) / (66 + 97 - 2)
37^2
((66 - 1) * 37^2 + (97 - 1) * 37^2) / (66 + 97 - 2)
37^2
(201 - 194) / (sqrt(37) * sqrt(1 / 66 + 1 / 97))
66 + 97 - 2
2 * pt(-7.212, df = 161)
(201 - 194) / (37 * sqrt(1 / 66 + 1 / 97))
qt(p = 1 - 0.05 / 2, df = 161)
plt_t(lb = 1.186, two_sided = TRUE, df = 161) +
geom_vline(xintercept = 1.186, lty = 2)
2 * pt(-1.186, df = 161)
(201 - 193) / (37 * sqrt(1 / 66 + 1 / 97))
plt_t(lb = 1.355, two_sided = TRUE, df = 161) +
geom_vline(xintercept = 1.355, lty = 2)
2 * pt(-1.355, df = 161)
qt(p = 1 - 0.05/2, df = 161)
(201 - 193) - 1.975 * 37 * sqrt(1/66 + 1/97)
(201 - 193) + 1.975 * 37 * sqrt(1/66 + 1/97)
(201 - 193) - 1.975 * 37 * sqrt(1/66 + 1/97)
(201 - 193) + 1.975 * 37 * sqrt(1/66 + 1/97)
((357 - 1) * 13.3^2^2 + (440 - 1) * 13.4^2) / (357 + 440 - 2)
sqrt(14111)
((357 - 1) * 13.3^2 + (440 - 1) * 13.4^2) / (357 + 440 - 2)
sqrt(178.4)
(110.5 - 109.1) / (sqrt(178.4) * sqrt(1 / 66 + 1 / 97))
357 + 440 - 2
qt(p = 1 - 0.05 / 2, df = 795)
(110.5 - 109.1) / (sqrt(178.4) * sqrt(1 / 357 + 1 / 440))
plt_t(lb = 1.472, two_sided = TRUE, df = 161) +
geom_vline(xintercept = 1.472, lty = 2)
2 * pt(-1.472, df = 161)
plt_t(lb = 1.472, two_sided = TRUE, df = 795) +
geom_vline(xintercept = 1.472, lty = 2)
2 * pt(-1.472, df = 795)
qt(p = 1 - 0.05/2, df = 795)
(110.5 - 109.1) - 1.963 * sqrt(178.4) * sqrt(1/357 + 1/440)
(110.5 - 109.1) + 1.963 * sqrt(178.4) * sqrt(1/357 + 1/440)
(110.5 - 109.1) - 1.963 * sqrt(178.4) * sqrt(1/357 + 1/440)
(110.5 - 109.1) + 1.963 * sqrt(178.4) * sqrt(1/357 + 1/440)
library(reticulate)
conda_list()
use_condaenv("r-reticulate")
reticulate::repl_python()
